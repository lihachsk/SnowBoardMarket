import * as React from 'react';
import { connect } from 'react-redux';
import {
    getCategories,
    getActiveCategoryId
} from 'selectors';
import categories from 'reducers/categories';
import { Link, withRouter } from 'react-router-dom';
import {compose} from 'redux';
import * as classNames from 'classnames';
import * as R from 'ramda';

class Categories extends React.Component<{categories,activeCategoryId,ownProps},{}> {
    renderCategory(category, index, activeCategoryId){
        const getActiveState = R.propEq('id', activeCategoryId)
        const linkClass = classNames({
            'list-group-item': true,
            'active': getActiveState(category)
        })
        return (
            <Link
                to={`/categories/${category.id}`}
                className={linkClass}
                key={index}
            >
                {category.name}
            </Link>
        );
    }
    renderAllCategory = (activeCategoryId) => {
        const linkClass = classNames({
            'list-group-item': true,
            'active': R.isNil(activeCategoryId)
        })
        return(
            <Link
                to='/'
                className={linkClass}
            >
                All
            </Link>
        );
    }
    render() {
        const {activeCategoryId} = this.props;
        const {categories} = this.props;
        return (
            <div className='well'>
                <h4>Brand</h4>
                <div className='list-group'>
                    {this.renderAllCategory(activeCategoryId)}
                    {categories.map((category, index) => this.renderCategory(category, index, activeCategoryId))}
                </div>
            </div>
        );
    }
}

const mapStateToProps = (state, ownProps) => ({
    categories: getCategories(state),
    ownProps: ownProps,
    activeCategoryId: getActiveCategoryId(ownProps)
})

export default compose(
    withRouter,
    connect(mapStateToProps, null)
)(Categories)

